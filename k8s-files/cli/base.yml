apiVersion: v1
kind: List
items:
-   apiVersion: v1
    kind: ReplicationController
    metadata:
      creationTimestamp: null
      labels:
        service: cache
      name: cache
      namespace: tumbo
    spec:
      replicas: 1
      selector:
        service: cache
      template:
        metadata:
          creationTimestamp: null
          labels:
            service: cache
        spec:
          containers:
          - image: tutum/redis
            env:
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: passwords
                  key: redispw
            imagePullPolicy: ""
            name: cache
            ports:
            - containerPort: 6379
            resources: {}
          restartPolicy: Always
          serviceAccountName: ""
          volumes: null
    status:
      replicas: 0
-   apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      name: cache
      namespace: tumbo
    spec:
      ports:
      - name: ""
        nodePort: 0
        port: 6379
        protocol: ""
        targetPort: 0
      selector:
        service: cache
    status:
      loadBalancer: {}
-   apiVersion: v1
    kind: ReplicationController
    metadata:
      creationTimestamp: null
      labels:
        service: db
      name: db
      namespace: tumbo
    spec:
      replicas: 1
      selector:
        service: db
      template:
        metadata:
          creationTimestamp: null
          labels:
            service: db
        spec:
          nodeSelector:
            type: database
          volumes:
          - name: db-volume
            hostPath:
              path: /data/db-volume-tumbo
          containers:
          - env:
            - name: DB_NAME
              value: planet
            - name: DB_USER
              value: planet
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passwords
                  key: dbpw
            image: philipsahli/postgresql-test
            imagePullPolicy: ""
            name: db
            ports:
            - containerPort: 5432
            resources: {}
            volumeMounts:
            - mountPath: /var/lib/postgresql/
              name: db-volume
            securityContext:
                privileged: true
          restartPolicy: Always
          serviceAccountName: ""
  #          volumes:
  #          - name: glusterfsvol
  #            glusterfs:
  #              endpoints: glusterfs-cluster
  #              path: volume2
  #              readOnly: false
    status:
      replicas: 0
-   apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      name: db
      namespace: tumbo
    spec:
      ports:
      - name: ""
        nodePort: 0
        port: 5432
        protocol: ""
        targetPort: 0
      selector:
        service: db
    status:
      loadBalancer: {}
-   apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      name: store
      namespace: tumbo
    spec:
      ports:
      - name: ""
        nodePort: 0
        port: 5432
        protocol: ""
        targetPort: 0
      selector:
        service: store
    status:
      loadBalancer: {}
-   apiVersion: v1
    kind: ReplicationController
    metadata:
      creationTimestamp: null
      labels:
        service: jobstoredb
      name: jobstoredb
      namespace: tumbo
    spec:
      replicas: 1
      selector:
        service: jobstoredb
      template:
        metadata:
          creationTimestamp: null
          labels:
            service: jobstoredb
        spec:
          containers:
          - env:
            - name: DB_NAME
              value: jobstore
            - name: DB_USER
              value: jobstore
            - name: SUPERUSER
              value: "true"
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passwords
                  key: jobstoredbpw
            image: philipsahli/postgresql-test
            imagePullPolicy: ""
            name: jobstoredb
            ports:
            - containerPort: 5432
            resources: {}
          restartPolicy: Always
          serviceAccountName: ""
          volumes: null
    status:
      replicas: 0
-   apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      name: jobstoredb
      namespace: tumbo
    spec:
      ports:
      - name: ""
        nodePort: 0
        port: 5432
        protocol: ""
        targetPort: 0
      selector:
        service: jobstoredb
    status:
      loadBalancer: {}
-   apiVersion: v1
    kind: Namespace
    metadata:
          name: tumbo
-   apiVersion: v1
    kind: ReplicationController
    metadata:
      creationTimestamp: null
      labels:
        service: queue
      name: queue
      namespace: tumbo
    spec:
      replicas: 1
      selector:
        service: queue
      template:
        metadata:
          creationTimestamp: null
          labels:
            service: queue
        spec:
          containers:
          - image: tutum/rabbitmq
            env:
            - name: RABBITMQ_PASS
              valueFrom:
                secretKeyRef:
                  name: passwords
                  key: rabbitmqadminpw
            imagePullPolicy: ""
            name: queue
            ports:
            - containerPort: 5672
            - containerPort: 15672
            resources: {}
          restartPolicy: Always
          serviceAccountName: ""
          volumes: null
    status:
      replicas: 0
-   apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      name: queue
      namespace: tumbo
    spec:
      ports:
      - name: "communication"
        nodePort: 0
        port: 5672
        protocol: ""
        targetPort: 0
      - name: "management"
        nodePort: 0
        port: 15672
        protocol: ""
        targetPort: 0
      selector:
        service: queue
    status:
      loadBalancer: {}
-   apiVersion: v1
    kind: ReplicationController
    metadata:
      creationTimestamp: null
      labels:
        service: store
      name: store
      namespace: tumbo
    spec:
      replicas: 1
      selector:
        service: store
      template:
        metadata:
          creationTimestamp: null
          labels:
            service: store
        spec:
          nodeSelector:
            type: database
          volumes:
          - name: db-volume
            hostPath:
              path: /data/db-volume-tumbo-store
          containers:
          - env:
            - name: DB_NAME
              value: store
            - name: DB_USER
              value: store
            - name: SUPERUSER
              value: "true"
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: passwords
                  key: storepw
            image: philipsahli/postgresql-test
            imagePullPolicy: ""
            name: store
            ports:
            - containerPort: 5432
            resources: {}
            volumeMounts:
            - mountPath: /var/lib/postgresql/
              name: db-volume
          restartPolicy: Always
          serviceAccountName: ""
    status:
      replicas: 0
