apiVersion: v1
kind: List
items:
-   apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRole
    metadata:
      name: ingress
    rules:
    - apiGroups:
      - ""
      - "extensions"
      resources:
      - configmaps
      - secrets
      - services
      - endpoints
      - ingresses
      - nodes
      - pods
      verbs:
      - list
      - watch
      - patch
    - apiGroups:
      - ""
      - "extensions"
      resources:
      - ingresses
      - secrets
      verbs:
      - get
      - patch
    - apiGroups:
      - ""
      resources:
      - events
      - services
      verbs:
      - create
      - list
      - update
      - get
    - apiGroups:
      - "extensions"
      resources:
      - ingresses/status
      - ingresses
      verbs:
      - update

-   apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: Role
    metadata:
      name: ingress-ns
      namespace: kube-system
    rules:
    - apiGroups:
      - ""
      resources:
      - pods
      verbs:
      - list
    - apiGroups:
      - ""
      resources:
      - services
      verbs:
      - get
    - apiGroups:
      - ""
      resources:
      - endpoints
      verbs:
      - get
      - create
      - update

-   apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: RoleBinding
    metadata:
      name: ingress-ns-binding
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: ingress-ns
    subjects:
      - kind: ServiceAccount
        name: ingress
        namespace: kube-system

-   apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      name: ingress-binding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: ingress
    subjects:
      - kind: ServiceAccount
        name: ingress
        namespace: kube-system

-   apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: ingress
      namespace: kube-system

-   apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      name: rp-ingress
      #namespace: kube-system
      namespace: tumbo
      annotations:
         nginx.org/ssl-services: "rp-ssl"
    spec:
      tls:
      - hosts:
        - {{ FRONTEND_HOST }}
        secretName: tumbo-secret
      rules:
      - host: {{ FRONTEND_HOST }}
        http:
          paths:
          - path: /
            backend:
              serviceName: rp
              servicePort: 80
          - path: /ssl
            backend:
              serviceName: rp-ssl
              servicePort: 443
