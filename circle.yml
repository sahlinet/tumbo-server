machine:
  environment:
    FRONTEND_HOST: localhost
  pre:
    - sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.1-circleci'
    - sudo chmod 0755 /usr/bin/docker
  services:
    - docker
dependencies:
  override:
    - docker info
    - pip install Markdown==2.6.6
    - curl -L https://github.com/docker/compose/releases/download/1.6.0/docker-compose-`uname -s`-`uname -m` > $HOME/bin/docker-compose
    - chmod +x $HOME/bin/docker-compose
test:
  override:
    #
    - pip install codacy-coverage
    - pip install -r requirements.txt
    # TODO: coverage should be run in cotainer and data directory for output should be added as volume
    - DIGITALOCEAN_ZONE=a.a.com CACHE_ENV_REDIS_PASS=aaa DROPBOX_CONSUMER_KEY=aa DROPBOX_CONSUMER_SECRET=aa DROPBOX_REDIRECT_URL=aa coverage run --append --omit='*migrations*' --source=tumbo tumbo/manage.py test core --settings=tumbo.dev
    - DIGITALOCEAN_ZONE=a.a.com CACHE_ENV_REDIS_PASS=aaa DROPBOX_CONSUMER_KEY=aa DROPBOX_CONSUMER_SECRET=aa DROPBOX_REDIRECT_URL=aa coverage run --append --omit='*migrations*' --source=tumbo tumbo/manage.py test aaa --settings=tumbo.dev
    - DIGITALOCEAN_ZONE=a.a.com CACHE_ENV_REDIS_PASS=aaa DROPBOX_CONSUMER_KEY=aa DROPBOX_CONSUMER_SECRET=aa DROPBOX_REDIRECT_URL=aa coverage run --append --omit='*migrations*' --source=tumbo tumbo/manage.py test ui --settings=tumbo.dev
    - coverage xml
    - python-codacy-coverage -r coverage.xml
    - tox
    #
    - pip install docopt==0.6.2 sh==1.11 Pygments==2.1.3 tabulate==0.7.5 requests
    #
    - sed -i 's|/var/run/docker.sock|/run/docker.sock|g' compose-files/docker-compose-app-docker_socket_exec.yml
    - egrep sock compose-files/docker-compose-app-docker_socket_exec.yml
    ## docs
    - markdown_py -o html5 -f tumbo/ui/templates/docs_content.html docs/user_guide.md
    - git config --global push.default current
    - git config --global user.email "philip@sahli.net"
    - git config --global user.name "Philip Sahli"
    - git commit tumbo/ui/templates/docs*.html -m "update docs [ci skip]" || true
      #- git push
    #
    - sudo chmod 777 /run/docker.sock
    #
    - python setup.py sdist --formats=gztar
    #
    - bash bin/create_package.sh
    - python cli/tumbo-cli.py server docker pull
    - python cli/tumbo-cli.py server docker build

    # Tests
    - mkdir shared
    - chown 1000:1000 shared
    - docker run -e CI=true  -v "$PWD/shared:/shared" -e COVERAGE_FILE=/shared/coverage.txt -e DIGITALOCEAN_ZONE=a.a.com -e CACHE_ENV_REDIS_PASS=aaa -e DROPBOX_CONSUMER_KEY=aa -e DROPBOX_CONSUMER_SECRET=aa -e DROPBOX_REDIRECT_URL=aa -i -t tumboserver_app bash -c "/home/tumbo/.virtualenvs/tumbo/bin/coverage run -a --source=tumbo  /home/tumbo/.virtualenvs/tumbo/lib/python2.7/site-packages/tumbo/manage.py test core --settings=tumbo.dev"
    - docker run -e CI=true  -v "$PWD/shared:/shared" -e COVERAGE_FILE=/shared/coverage.txt -e DIGITALOCEAN_ZONE=a.a.com -e CACHE_ENV_REDIS_PASS=aaa -e DROPBOX_CONSUMER_KEY=aa -e DROPBOX_CONSUMER_SECRET=aa -e DROPBOX_REDIRECT_URL=aa -i -t tumboserver_app bash -c "/home/tumbo/.virtualenvs/tumbo/bin/coverage run -a --source=tumbo  /home/tumbo/.virtualenvs/tumbo/lib/python2.7/site-packages/tumbo/manage.py test aaa --settings=tumbo.dev"
    - docker run -e CI=true  -v "$PWD/shared:/shared" -e COVERAGE_FILE=/shared/coverage.txt -e DIGITALOCEAN_ZONE=a.a.com -e CACHE_ENV_REDIS_PASS=aaa -e DROPBOX_CONSUMER_KEY=aa -e DROPBOX_CONSUMER_SECRET=aa -e DROPBOX_REDIRECT_URL=aa -i -t tumboserver_app bash -c "/home/tumbo/.virtualenvs/tumbo/bin/coverage run -a --source=tumbo  /home/tumbo/.virtualenvs/tumbo/lib/python2.7/site-packages/tumbo/manage.py test ui --settings=tumbo.dev"
    #
    - sh -x bin/build-worker.sh
    #
    - python cli/tumbo-cli.py server docker run:
        background: true
        timeout: 360
    - sleep 240
    - docker inspect tumboserver_app_1
    - curl --retry 10 --retry-delay 5 -v $(python cli/tumbo-cli.py server docker url)
    - pkill python
    #
deployment:
  master:
    branch: master
    commands:
      # publish master
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag tumboserver_app philipsahli/tumbo-server:master
      - docker tag philipsahli/tumbo-worker:develop philipsahli/tumbo-worker:master
      - docker push philipsahli/tumbo-server:master
      - docker push philipsahli/tumbo-worker:master
  release:
    tag: /v[0-9]+(\.[0-9]+)*/
    owner: sahlinet
    commands:
      # publish tags
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag tumboserver_app philipsahli/tumbo-server:$CIRCLE_TAG
      - docker tag philipsahli/tumbo-worker:develop philipsahli/tumbo-worker:$CIRCLE_TAG
      - docker push philipsahli/tumbo-server:$CIRCLE_TAG
      - docker push philipsahli/tumbo-worker:$CIRCLE_TAG
      - bash bin/create_package.sh
      - pip install twine==1.8.1
      - twine upload -r pypi -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/tumbo-server-*tar.gz
      - >
        if [ -n "${CIRCLE_TOKEN}" ] && [ -n "${DEPLOY_URL}" ]; then
            echo curl -v X POST --header "Content-Type: application/json" --data '{"build_parameters": {"TUMBO_TAG": "'"$CIRCLE_TAG"'"}}' -X POST $DEPLOY_URL?circle-token=$CIRCLE_TOKEN
            curl -v X POST --header "Content-Type: application/json" --data '{"build_parameters": {"TUMBO_TAG": "'"$CIRCLE_TAG"'"}}' -X POST $DEPLOY_URL?circle-token=$CIRCLE_TOKEN
        fi
  trunk:
    branch: develop
    commands:
      # publish develop
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker tag tumboserver_app philipsahli/tumbo-server:develop
      - docker push philipsahli/tumbo-server:develop
      - docker push philipsahli/tumbo-worker:develop
      - pip install twine==1.8.1
      - twine upload --skip-existing -r pypitest -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/tumbo-server-*tar.gz
